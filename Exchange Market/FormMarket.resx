<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4fj/8vPzH7WxcUd0kxCAAAAAAElFTkSuQmCC
</value>
  </data>
</root>