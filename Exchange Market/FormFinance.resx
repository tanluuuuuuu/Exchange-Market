<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /uZvwtDV9f+sLncNd7EYJQAAAABJRU5ErkJggg==
</value>
  </data>
</root>