<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        sRglAAAAAElFTkSuQmCC
</value>
  </data>
</root>